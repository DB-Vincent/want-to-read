basePath: /
definitions:
  handlers.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  models.Book:
    properties:
      author:
        type: string
      completed:
        type: boolean
      created_at:
        type: string
      id:
        type: integer
      title:
        type: string
      updated_at:
        type: string
    type: object
  models.Health:
    properties:
      status:
        type: string
      timestamp:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API for managing your reading list
  title: Want to Read API
  version: "1.0"
paths:
  /api/book:
    post:
      description: Add a book into the database
      parameters:
      - description: Book to add
        in: body
        name: book
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Book'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Add book
      tags:
      - books
  /api/book/{id}:
    delete:
      description: Deletes a book based on the given ID
      parameters:
      - description: ID of book
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete book
      tags:
      - books
    patch:
      description: Updates a book based on the given ID
      parameters:
      - description: ID of book
        in: path
        name: id
        required: true
        type: integer
      - description: Adjusted book object
        in: body
        name: book
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Book'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Update book
      tags:
      - books
  /api/books:
    get:
      description: Get a list of all books in the system
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Book'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: List all books
      tags:
      - books
  /api/login:
    post:
      description: Authenticate user and return JWT token
      parameters:
      - description: Login request
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Authenticate user
      tags:
      - users
  /health:
    get:
      description: Get the health status of the API
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Health'
      summary: Health check endpoint
      tags:
      - health
swagger: "2.0"
